import java.util.*;

class Solution {
    public String solution(String new_id) {
        String answer = "";

        char [] temp = new char[new_id.length()];

        //일단 한 글자씩 받아봐
        for(int i=0;i< temp.length;i++){
            temp[i]=new_id.charAt(i);
        }

        //1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
        for(int i=0;i< temp.length;i++){
            if(temp[i]>64&&temp[i]<91)
                temp[i]= (char) (temp[i]+32);
        }
        //2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
        for(int i=0;i< temp.length;i++){
            if(temp[i]<45||temp[i]==47||(temp[i]>57&&temp[i]<95)||temp[i]==96||temp[i]>122)
                temp[i]= (char) (32);
        }

        //3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
        ArrayList<Character>temp_2 = new ArrayList<Character>();

        for(int i=0;i<temp.length;i++){
            if(temp[i]!=32)
                temp_2.add(temp[i]);
        }


        if(temp_2.size()>1) {
            for (int i = 0; i < temp_2.size()-1; i++) {
                if (temp_2.get(i) == 46 && temp_2.get(i) == temp_2.get(i + 1)) {
                    temp_2.remove(i);
                    i--;
                }
            }
        }
        //4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.

        if(temp_2.size()!=0) {
            if (temp_2.get(0) == 46) {
                while (temp_2.size()!=0&&temp_2.get(0) == 46) {
                    temp_2.remove(0);
                }
            }
            if(temp_2.size()!=0) {
                if (temp_2.get(temp_2.size() - 1) == 46)
                    while (temp_2.get(temp_2.size() - 1) == 46)
                        temp_2.remove(temp_2.size() - 1);
            }
        }
        //5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.

        if(temp_2.size()==0){
            temp_2.add('a');
        }

        //6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
        // 만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
        if(temp_2.size()>15){
            while(temp_2.size()!=15){
                temp_2.remove(15);
            }
            if(temp_2.get(14)==46)
                temp_2.remove(14);

        }


        //7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.
        if(temp_2.size()<3) {
            while (temp_2.size() != 3) {
                temp_2.add(temp_2.get(temp_2.size()-1));
            }
        }

        for (Character idx : temp_2) {
            answer+= idx;
        }

        return answer;
    }
}
