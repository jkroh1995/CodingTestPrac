import java.util.*;
import java.util.regex.Pattern;

class Solution {
    public int solution(String s) {
        int answer = 0;
        StringTokenizer st = new StringTokenizer(s, "123456789", true);

        ArrayList<String> temp = new ArrayList<>();

        while(st.hasMoreTokens()){
            temp.add(st.nextToken());
        }
        String pattern = "^[0-9]*$";

        for(int i=0;i<temp.size();i++){
            if(Pattern.matches(pattern, temp.get(i))==false){
                if(temp.get(i).equals("zero")){
                    temp.set(i,"0");
                }else if(temp.get(i).equals("one")){
                    temp.set(i,"1");
                }else if(temp.get(i).equals("two")){
                    temp.set(i,"2");
                }else if(temp.get(i).equals("three")){
                    temp.set(i,"3");
                }else if(temp.get(i).equals("four")){
                    temp.set(i,"4");
                }else if(temp.get(i).equals("five")){
                    temp.set(i,"5");
                }else if(temp.get(i).equals("six")){
                    temp.set(i,"6");
                }else if(temp.get(i).equals("seven")){
                    temp.set(i,"7");
                }else if(temp.get(i).equals("eight")){
                    temp.set(i,"8");
                }else if(temp.get(i).equals("nine")){
                    temp.set(i,"9");
                }
            }
        }

        //한 단어씩 나온건 다 됐음. 이제 두 단어씩 이어져 있는 것만 어떻게 하면 됨.
        
        
        return answer;
    }
}
